/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p2p.messenger;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.rgb;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author harshitbudhraja
 */
public class ServerMessaging extends javax.swing.JFrame {
    BufferedWriter bw;
    
    public void serverchat(String message){
        chatarea.setText(chatarea.getText() + "\n" + message);
    }

    /**
     * Creates new form Messaging
     * @param c
     */
    public ServerMessaging() {
        initComponents();
        getContentPane().setBackground( new java.awt.Color(59, 89, 152) );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatarea = new javax.swing.JTextArea();
        apptitle = new javax.swing.JLabel();
        messagefield = new javax.swing.JTextField();
        sendbutton = new javax.swing.JButton();
        saveMessageServer = new javax.swing.JButton();
        filesendServer = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chatarea.setEditable(false);
        chatarea.setBackground(new java.awt.Color(189, 195, 199));
        chatarea.setColumns(20);
        chatarea.setRows(5);
        jScrollPane1.setViewportView(chatarea);

        apptitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        apptitle.setText("P2P Messenger`");

        messagefield.setBackground(new java.awt.Color(189, 195, 199));
        messagefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                messagefieldFocusGained(evt);
            }
        });

        sendbutton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sendbutton.setText("SEND");
        sendbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbuttonActionPerformed(evt);
            }
        });

        saveMessageServer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveMessageServer.setText("Save");
        saveMessageServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMessageServerActionPerformed(evt);
            }
        });

        filesendServer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        filesendServer.setText(" Files");
        filesendServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filesendServerActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("change theme");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(saveMessageServer, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filesendServer)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(apptitle, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apptitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messagefield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sendbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(saveMessageServer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(filesendServer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbuttonActionPerformed
        // TODO add your handling code here:
        OutputStream os = null;
        try {
            os = Server.socket.getOutputStream();
        } catch (IOException ex) {
            Logger.getLogger(ServerMessaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        OutputStreamWriter osw = new OutputStreamWriter(os);
        bw = new BufferedWriter(osw);
        String message = messagefield.getText();
        String chat = null;
        try {
            chat = InetAddress.getLocalHost().toString() + ": " + message;
        } catch (UnknownHostException ex) {
            Logger.getLogger(ServerMessaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bw.write(chat + "\n");
            bw.flush();
            System.out.println(chat);
        } catch (IOException ex) {
            Logger.getLogger(ServerMessaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        chatarea.setText(chatarea.getText() + "\n" + chat);
        messagefield.setText(null);
    }//GEN-LAST:event_sendbuttonActionPerformed

    private void messagefieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_messagefieldFocusGained
        // TODO add your handling code here:
        JRootPane rootPane = SwingUtilities.getRootPane(sendbutton); 
        rootPane.setDefaultButton(sendbutton);
    }//GEN-LAST:event_messagefieldFocusGained

    private void filesendServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filesendServerActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        
        File file = chooser.getSelectedFile();
        File file1 = new File("C:\\Users\\G. MOSTAFA\\Desktop\\test.txt");
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Messaging.class.getName()).log(Level.SEVERE, null, ex);
        }
 
  String st, fin = null;
        try {
            while ((st = br.readLine()) != null)
                fin = fin+st;
        } catch (IOException ex) {
            Logger.getLogger(Messaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(fin);
        OutputStream os = null;
        try {
            os = Server.socket.getOutputStream();
        } catch (IOException ex) {
            Logger.getLogger(ServerMessaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        OutputStreamWriter osw = new OutputStreamWriter(os);
        bw = new BufferedWriter(osw);
        String message = fin;
        String chat = null;
        try {
            chat = InetAddress.getLocalHost().toString() + ": " + message;
        } catch (UnknownHostException ex) {
            Logger.getLogger(ServerMessaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            bw.write(chat + "\n");
            bw.flush();
            System.out.println(chat);
        } catch (IOException ex) {
            Logger.getLogger(ServerMessaging.class.getName()).log(Level.SEVERE, null, ex);
        }
        chatarea.setText(chatarea.getText() + "\n" + chat);
        messagefield.setText(null);
    }//GEN-LAST:event_filesendServerActionPerformed

    private void saveMessageServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMessageServerActionPerformed
         File writeFile;
    Writer writer = null;

    writeFile = new File("D:\\server_chat_history.txt");
    try {
        writer = new BufferedWriter(new OutputStreamWriter(
                new FileOutputStream(writeFile), "utf-8"));
        chatarea.write(writer);
    } catch (IOException ex) {
        // report
    } finally {
        try {
            writer.close();
        } catch (Exception ex) {/*ignore*/
        }
    }
      JOptionPane.showMessageDialog(null, "All chat history of this session are saved on D:\\server_chat_history.txt file", "Chat saved", JOptionPane.INFORMATION_MESSAGE);
         
      
        
    }//GEN-LAST:event_saveMessageServerActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setBackground(new Color(211, 84, 0));
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerMessaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerMessaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerMessaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerMessaging.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Messaging().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apptitle;
    private javax.swing.JTextArea chatarea;
    private javax.swing.JButton filesendServer;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messagefield;
    private javax.swing.JButton saveMessageServer;
    private javax.swing.JButton sendbutton;
    // End of variables declaration//GEN-END:variables
}
